name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0'  # Specify your project's .NET version

      - name: Install SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner
        shell: powershell

      - name: Restore NuGet packages
        run: dotnet restore InitialProject.sln
        shell: powershell

      - name: Ensure RuntimeIdentifier 'win'
        run: |
          $csprojPath = 'Booking/Booking.csproj'
          [xml]$csproj = Get-Content $csprojPath
          $runtimeIdentifiersNode = $csproj.Project.PropertyGroup.RuntimeIdentifiers
          if ($runtimeIdentifiersNode -eq $null) {
            $newNode = $csproj.CreateElement("RuntimeIdentifiers", $csproj.Project.NamespaceURI)
            $newNode.InnerText = 'win'
            $csproj.Project.PropertyGroup.AppendChild($newNode)
          }
          else {
            $runtimeIdentifiersNode.InnerText = 'win;' + $runtimeIdentifiersNode.InnerText
          }
          $csproj.Save($csprojPath)
        shell: powershell

      - name: Begin SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner begin /k:"UIIS2023_sims_2_b" /o:"uiis2023" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        shell: powershell

      - name: Build the project
        run: msbuild /t:Rebuild /p:Configuration=Release InitialProject.sln
        shell: powershell

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        shell: powershell
